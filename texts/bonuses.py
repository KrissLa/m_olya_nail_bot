from texts.emoji import pensive_em, plus_em, minus_em
from utils.date_format import date_formatting

TRANSACTION_TYPE_CHOICES = {
    "reward": f"{plus_em} Зачисление",
    "write_off": f"{minus_em} Списание"
}
bonus_tx = """
Бонусными баллами можно оплатить часть заказа. Вопользоваться бонусными баллами можно только внутри этого бота.
При заказе можно потратить минимум 500 ББ, максимум 5000 ББ.
1000 ББ = 1 BYN.
Бонусные баллы начисляются за:
    1. Регистрацию в боте.
    2. Успешное завершение заказа.
    3. Успешное завершение заказов приглашенных пользователей.
В этом боте действует 2 вида бонусов:
    - Персональный бонус 
    - Реферальный бонус 
У Вас есть уровень этих бонусов. От уровня зависит количество бонусных баллов, которые Вы получаете при заказе.
Персональный уровень бонусов повышается с количеством выполненных заказов.
Реферальный уровень бонусов повышается с количеством выполненных заказов приглашенных Вами пользователей.
    Например, у Вас Персональный уровень бонусов равен 3 (1,7%), а Реферальный уровень бонусов равен 2 (1.1%).
Это значит что при завершении заказа стоимостью 20 BYN Вам будет начисленно 560 ББ, которые Вы сможете потратить при следующих заказах.
Формула: 20 * (0.017 + 0.011) * 1000 = 560 

Вы будете получать по 500 ББ за первый заказ приглашенных пользователей.
Также Вам будут начисляться 2500 ББ за каждый десятый заказ всех приглашенных пользователей.

Бонусные баллы начисляются после завершения заказа.
Сейчас у Вас такие уровни:
    <i>Персональный уровень бонусов:</i> <b>{personal_bonus_lvl} ({personal_value} %)</b>. 
    Осталось завершить заказов для повышения уровня: <b>{personal_count}</b>.
    <i>Реферальный уровень бонусов:</i> <b>{referral_bonus_lvl} ({referral_value} %)</b>.
    Приглашенным Вами пользователям осталось завершить зкаказов для повышения уровня: <b>{referral_count}</b>
    
<i>Ваш бонусный балланс:</i> <b>{bonus_balance}</b>.
<i>Заморожено:</i> <b>{frozen_balance}</b>.

Ваша персональная ссылка для приглашения друзей:
http://t.me/{bot_username}?start={user_id}

"""

empty_history_tx = f"""
Ваша история бонусов пока пуста {pensive_em}
"""


def get_bonus_transactions(bonus_transactions):
    """
    Формируем сообщение с последними операциями
    :param bonus_transactions: Список с данными
    :return: str
    """
    len_transactions = len(bonus_transactions)
    if len_transactions == 1:
        text = "Здесь показана 1 последняя операция с бонусными баллами."
    elif len_transactions in [2, 3, 4]:
        text = f"Здесь показаны {len_transactions} последние операции с бонусными баллами."
    else:
        text = f"Здесь показаны {len_transactions} последних операций с бонусными баллами."
    transactions = [text, ]
    for t in bonus_transactions:
        date = date_formatting(t['created_at'])
        mess = f"""
<i>Тип операции:</i> <b>{TRANSACTION_TYPE_CHOICES[t['type']]}</b>.
<i>Дата:</i> <b>{date}</b>.
<i>Описание:</i> <b>{t['comment']}</b>.
<i>Количество:</i> <b>{t['amount']} ББ</b>.
"""
        transactions.append(mess)
    return '\n'.join(transactions)
